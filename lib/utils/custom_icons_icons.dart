/// Flutter icons CustomIcons
/// Copyright (C) 2023 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  CustomIcons
///      fonts:
///       - asset: fonts/CustomIcons.ttf
///
/// 
///
import 'package:flutter/widgets.dart';

class CustomIcons {
  CustomIcons._();

  static const _kFontFam = 'CustomIcons';
  static const String? _kFontPkg = null;

  static const IconData arrow_left_line = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_right_line = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData check_line = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData chevron_left = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData chevron_right = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData close_line = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData copy_fill = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData copy_line = IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData delete_bin_line = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData delete_bin_fill = IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData fontsize_line = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData heart_fill = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData heart_line = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ghost_line = IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData logout_line = IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData moon_fill = IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData more_line = IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData notif_fill = IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pencil_fill = IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData question_line = IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData report_fill = IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData report_line = IconData(0xe816, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData save_fill = IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData settings_line = IconData(0xe818, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData share_line = IconData(0xe819, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData star_fill = IconData(0xe81a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData sun_fill = IconData(0xe81b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData time_line = IconData(0xe81c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData timer_fill = IconData(0xe81d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData view_false_fill = IconData(0xe81e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData warning_line = IconData(0xe81f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
